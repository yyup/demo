<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" 
    xmlns:tx="http://www.springframework.org/schema/tx" 
    xmlns:mvc="http://www.springframework.org/schema/mvc" 
     xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">
 
    <context:component-scan base-package="com.test.base.*" />

		<!-- spring后处理器 将后面可以通过${name}的方式引用property中的健 -->
		<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">

		<property name="locations">
			<list>
				<!-- 如果有多个属性文件，一并列在这里 -->
				<value>classPath:jdbc.properties</value>
				<!-- <value>xxx.properties</value> -->
			</list>
		</property>
	</bean>

	<!-- 数据源-->
	<bean id = "dataSource" class="com.zaxxer.hikari.HikariDataSource" destroy-method="close">  
        <property name="driverClassName" value="${jdbc.driver}" />  
        <property name="jdbcUrl" value="${jdbc.url}" />  
        <property name="username" value="${jdbc.username}" />  
        <property name="password" value="${jdbc.password}" />  
        <property name="maximumPoolSize" value="100" />  
        <property name="minimumIdle" value="10" />  
        <property name="connectionTestQuery" value="select 1" />  
        <property name="dataSourceProperties">  
            <props>  
                <prop key="cachePrepStmts">true</prop>  
                <prop key="prepStmtCacheSize">250</prop>  
                <prop key="prepStmtCacheSqlLimit">2048</prop>  
                <prop key="useServerPrepStmts">true</prop>  
            </props>  
        </property>  
    </bean>  
	 <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 自动扫描mapping.xml文件    -->  
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">  
        <property name="dataSource" ref="dataSource" />  
        <!-- 错误写法 这里路径分割符用点号是错的  前面要加上classpath -->
        <property name="mapperLocations" value="classpath*:com/test/base/mapping/*.xml"></property>  
    </bean>  
  
    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->  
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
        <property name="basePackage" value="com.test.base.dao" />  
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>  
    </bean>  
  
    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->  
    <bean id="transactionManager"  
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource" />  
    </bean>  
 
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- 配置 Annotation 驱动，定义事务   启用事务注解   这种方式需在事务方法使用注解-->
	
	<mvc:annotation-driven>
		
	<!-- 返回json数据，@response使用 -->
	<mvc:message-converters register-defaults="true">
		<bean
			class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
			<property name="supportedMediaTypes">
				<list>
					<value>text/html;charset=UTF-8</value>
					<value>application/json;charset=UTF-8</value>
				</list>
			</property>

		</bean>
	</mvc:message-converters>
	</mvc:annotation-driven>

</beans>